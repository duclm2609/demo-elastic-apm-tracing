version: "3.7"

services:
  micro-inventory:
    build:
      context: ./micro-inventory-service
      args:
        APM_JAVA_AGENT_VER: ${APM_JAVA_AGENT_VER}
    container_name: micro-inventory
    environment:
      ELASTIC_APM_ENVIRONMENT: local
      ELASTIC_APM_SERVER_URL: http://apm-server:8200
      ELASTIC_APM_SERVICE_NAME: micro-inventory
      ELASTIC_APM_APPLICATION_PACKAGES: vn.duclm.demo.microinventoryservice
    volumes:
      - micro-inventory-log:/app/micro-inventory-service/logs
    networks:
      - micro-demo

  micro-price:
    build:
      context: ./micro-price-service
    container_name: micro-price
    env_file: ./micro-price-service/.env
    volumes:
      - micro-price-log:/var/logs
    networks:
      - micro-demo

  micro-review:
    build:
      context: ./micro-review-service
    container_name: micro-review
    env_file: ./micro-review-service/.env
    volumes:
      - micro-review-log:/var/logs
    networks:
      - micro-demo

  micro-api-gateway:
    build:
      context: ./micro-api-gateway
    container_name: micro-api-gateway
    env_file: ./micro-api-gateway/.env
    volumes:
      - micro-api-gateway-log:/var/logs
    networks:
      - micro-demo
    ports:
      - "8710:8080"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_STACK_VER}
    container_name: elasticsearch
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - ELASTIC_PASSWORD=123456Aa@
    networks:
      - micro-demo
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  apm-server:
    image: docker.elastic.co/apm/apm-server:${ELASTIC_STACK_VER}
    container_name: apm-server
    environment:
      - TZ=Asia/Ho_Chi_Minh
    depends_on: ["elasticsearch"]
    networks:
      - micro-demo
    command: --strict.perms=false -e # -e flag to log to stderr and disable syslog/file output
    volumes:
      - ./apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml
    healthcheck:
      test: curl -s http://localhost:8200/healthcheck >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  filebeat:
    image: docker.elastic.co/beats/filebeat:${ELASTIC_STACK_VER}
    container_name: filebeat
    environment:
      - TZ=Asia/Ho_Chi_Minh
    command: --strict.perms=false -e
    volumes:
      - ./filebeat/inputs.d/:/usr/share/filebeat/inputs.d/:ro
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - micro-inventory-log:/var/logs/micro-inventory/
      - micro-api-gateway-log:/var/logs/micro-api-gateway/
      - micro-price-log:/var/logs/micro-price
      - micro-review-log:/var/logs/micro-review
    networks:
      - micro-demo
    healthcheck:
      test: filebeat test config
      interval: 30s
      timeout: 15s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_STACK_VER}
    container_name: logstash
    environment:
      - TZ=Asia/Ho_Chi_Minh
    depends_on: ["elasticsearch"]
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/config/pipeline
      - ./logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
    networks:
      - micro-demo
    healthcheck:
      test: bin/logstash -t
      interval: 30s
      timeout: 50s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_STACK_VER}
    container_name: kibana
    environment:
      - TZ=Asia/Ho_Chi_Minh
    depends_on: ["elasticsearch"]
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - micro-demo
    healthcheck:
      test: curl -s http://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  #Kafka system
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka-broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka-broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

networks:
  micro-demo:

volumes:
  esdata:
  micro-inventory-log:
  micro-api-gateway-log:
  micro-price-log:
  micro-review-log: